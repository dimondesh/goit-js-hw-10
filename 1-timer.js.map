{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst startButton = document.querySelector('[data-start]');\nconst datetimePicker = document.querySelector('#datetime-picker');\nconst timerValues = {\n  days: document.querySelector('[data-days]'),\n  hours: document.querySelector('[data-hours]'),\n  minutes: document.querySelector('[data-minutes]'),\n  seconds: document.querySelector('[data-seconds]'),\n};\n\nlet userSelectedDate = null;\nlet countdownInterval = null;\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const selectedDate = selectedDates[0];\n    if (selectedDate <= new Date()) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n      });\n      startButton.disabled = true;\n    } else {\n      userSelectedDate = selectedDate;\n      startButton.disabled = false;\n    }\n  },\n};\nflatpickr(datetimePicker, options);\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction updateTimerInterface({ days, hours, minutes, seconds }) {\n  timerValues.days.textContent = addLeadingZero(days);\n  timerValues.hours.textContent = addLeadingZero(hours);\n  timerValues.minutes.textContent = addLeadingZero(minutes);\n  timerValues.seconds.textContent = addLeadingZero(seconds);\n}\n\nfunction startCountdown() {\n  countdownInterval = setInterval(() => {\n    const currentTime = new Date();\n    const timeDifference = userSelectedDate - currentTime;\n\n    if (timeDifference <= 0) {\n      clearInterval(countdownInterval);\n      updateTimerInterface({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n      iziToast.success({\n        title: 'Done',\n        message: 'The countdown has ended!',\n      });\n      datetimePicker.disabled = false;\n      startButton.disabled = true;\n      return;\n    }\n\n    const time = convertMs(timeDifference);\n    updateTimerInterface(time);\n  }, 1000);\n\n  datetimePicker.disabled = true;\n  startButton.disabled = true;\n}\n\nstartButton.addEventListener('click', startCountdown);\n"],"names":["startButton","datetimePicker","timerValues","userSelectedDate","countdownInterval","addLeadingZero","value","options","selectedDates","selectedDate","iziToast","flatpickr","convertMs","ms","days","hours","minutes","seconds","updateTimerInterface","startCountdown","timeDifference","time"],"mappings":"sGAKA,MAAMA,EAAc,SAAS,cAAc,cAAc,EACnDC,EAAiB,SAAS,cAAc,kBAAkB,EAC1DC,EAAc,CAClB,KAAM,SAAS,cAAc,aAAa,EAC1C,MAAO,SAAS,cAAc,cAAc,EAC5C,QAAS,SAAS,cAAc,gBAAgB,EAChD,QAAS,SAAS,cAAc,gBAAgB,CAClD,EAEA,IAAIC,EAAmB,KACnBC,EAAoB,KAExB,SAASC,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAeD,EAAc,CAAC,EAChCC,GAAgB,IAAI,MACtBC,EAAS,MAAM,CACb,MAAO,QACP,QAAS,oCACjB,CAAO,EACDV,EAAY,SAAW,KAEvBG,EAAmBM,EACnBT,EAAY,SAAW,GAE1B,CACH,EACAW,EAAUV,EAAgBM,CAAO,EAEjC,SAASK,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASC,EAAqB,CAAE,KAAAJ,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CAC/Df,EAAY,KAAK,YAAcG,EAAeS,CAAI,EAClDZ,EAAY,MAAM,YAAcG,EAAeU,CAAK,EACpDb,EAAY,QAAQ,YAAcG,EAAeW,CAAO,EACxDd,EAAY,QAAQ,YAAcG,EAAeY,CAAO,CAC1D,CAEA,SAASE,GAAiB,CACxBf,EAAoB,YAAY,IAAM,CAEpC,MAAMgB,EAAiBjB,EADH,IAAI,KAGxB,GAAIiB,GAAkB,EAAG,CACvB,cAAchB,CAAiB,EAC/Bc,EAAqB,CAAE,KAAM,EAAG,MAAO,EAAG,QAAS,EAAG,QAAS,CAAC,CAAE,EAClER,EAAS,QAAQ,CACf,MAAO,OACP,QAAS,0BACjB,CAAO,EACDT,EAAe,SAAW,GAC1BD,EAAY,SAAW,GACvB,MACD,CAED,MAAMqB,EAAOT,EAAUQ,CAAc,EACrCF,EAAqBG,CAAI,CAC1B,EAAE,GAAI,EAEPpB,EAAe,SAAW,GAC1BD,EAAY,SAAW,EACzB,CAEAA,EAAY,iBAAiB,QAASmB,CAAc"}